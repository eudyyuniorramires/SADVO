// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SADVO.Infrastructure.Persistence.Context;

#nullable disable

namespace SADVO.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250619043333_CambiosenUsuario")]
    partial class CambiosenUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AlianzaPolitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoReceptorId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoSolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoReceptorId");

                    b.HasIndex("PartidoSolicitanteId");

                    b.ToTable("AlianzaPolitica", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("FotoPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.CandidatoPuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("CandidatoPuesto", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Ciudadano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentoIdentidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ciudadano", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.DirigentePartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("DirigentePartido", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Eleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Eleccion", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PartidoPolitico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EstaActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Siglas")
                        .IsUnique();

                    b.ToTable("PartidoPolitico", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PuestoElectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EstaActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("PuestoElectivo", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("EstaActivo")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rol")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoPuestoId")
                        .HasColumnType("int");

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<int>("EleccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoPuestoId");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("EleccionId");

                    b.ToTable("Voto");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.AlianzaPolitica", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.PartidoPolitico", "PartidoReceptor")
                        .WithMany("AlianzasRecibidas")
                        .HasForeignKey("PartidoReceptorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PartidoPolitico", "PartidoSolicitante")
                        .WithMany("AlianzasEnviadas")
                        .HasForeignKey("PartidoSolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoReceptor");

                    b.Navigation("PartidoSolicitante");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Candidato", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.PartidoPolitico", "PartidoPolitico")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Candidatos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.CandidatoPuesto", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.Candidato", "Candidato")
                        .WithMany("CandidatoPuestos")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.PuestoElectivo", "PuestoElectivo")
                        .WithMany("CandidatoPuestos")
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.DirigentePartido", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.PartidoPolitico", "PartidoPolitico")
                        .WithMany("Dirigentes")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Usuario", "Usuario")
                        .WithOne("DirigentePartido")
                        .HasForeignKey("SADVO.Core.Domain.Entities.DirigentePartido", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Voto", b =>
                {
                    b.HasOne("SADVO.Core.Domain.Entities.CandidatoPuesto", "CandidatoPuesto")
                        .WithMany("Votos")
                        .HasForeignKey("CandidatoPuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Ciudadano", "Ciudadano")
                        .WithMany("Votos")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVO.Core.Domain.Entities.Eleccion", "Eleccion")
                        .WithMany("Votos")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CandidatoPuesto");

                    b.Navigation("Ciudadano");

                    b.Navigation("Eleccion");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Candidato", b =>
                {
                    b.Navigation("CandidatoPuestos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.CandidatoPuesto", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Ciudadano", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Eleccion", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PartidoPolitico", b =>
                {
                    b.Navigation("AlianzasEnviadas");

                    b.Navigation("AlianzasRecibidas");

                    b.Navigation("Candidatos");

                    b.Navigation("Dirigentes");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.PuestoElectivo", b =>
                {
                    b.Navigation("CandidatoPuestos");
                });

            modelBuilder.Entity("SADVO.Core.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("DirigentePartido");
                });
#pragma warning restore 612, 618
        }
    }
}
